<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software engineering education on Images and Opinions</title>
    <link>https://iansomme.github.io/technology/teaching/</link>
    <description>Recent content in Software engineering education on Images and Opinions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Fri, 25 Mar 2022 13:46:28 +0000</lastBuildDate>
    
	<atom:link href="https://iansomme.github.io/technology/teaching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Out with the UML!</title>
      <link>https://iansomme.github.io/technology/teaching/out-with-uml/</link>
      <pubDate>Thu, 23 Apr 2020 06:34:41 +0100</pubDate>
      
      <guid>https://iansomme.github.io/technology/teaching/out-with-uml/</guid>
      <description>In the 1980s and 1990s, universities started to introduce software engineering courses into their computer science degree programs. At that time, software engineering was dominated by the problems of creating large custom software systems. These were developed by managed teams working on long-lifetime software projects.
This project-based approach was reflected in software engineering courses and in textbooks developed to support these courses. My own book adopted this approach as did texts by Pressman, Van Vliet and others.</description>
    </item>
    
    <item>
      <title>Engineering Software Products</title>
      <link>https://iansomme.github.io/technology/teaching/esp/</link>
      <pubDate>Sat, 16 May 2020 15:46:00 +0100</pubDate>
      
      <guid>https://iansomme.github.io/technology/teaching/esp/</guid>
      <description>An introduction to modern software engineering
In 1981, I wrote a short book that was an introduction to software engineering for computer science students. This covered most of software engineering as it was at that time. Virtually all software was then developed in ‘projects’, where a client supplied the ‘requirements’ and the software was implemented by a separate team.
Over the years, the discipline expanded and so did my book. It was no longer just an introduction but embraced several advanced topics.</description>
    </item>
    
  </channel>
</rss>